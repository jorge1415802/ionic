{"version":3,"sources":["./src/app/pages/infinite/infinite-routing.module.ts","./src/app/pages/infinite/infinite.module.ts","./src/app/pages/infinite/infinite.page.ts","./src/app/pages/infinite/infinite.page.scss","./src/app/pages/infinite/infinite.page.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wDAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;AACyB;IAY3D,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAV9B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,+EAAyB;YACzB,kFAAgB;SACjB;QACD,YAAY,EAAE,CAAC,wDAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACrB8B;AACb;IAMnC,YAAY,SAAZ,YAAY;IAKvB;QAHA,SAAI,GAAW,KAAK,CAAC,EAAE,CAAC,CAAC;IAGT,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,KAAW;QAClB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,UAAU,CAAC,GAAG,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;gBACxB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAC9B,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;aACpC;YAED,MAAM,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC;YAC5B,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAE9B,+CAA+C;YAC/C,kCAAkC;YAClC,6BAA6B;YAC7B,kCAAkC;YAClC,IAAI;QACN,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;CACF;;;4BA3BE,oDAAS,SAAC,6DAAiB;;AAHjB,YAAY;IALxB,wDAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,6EAAmC;;KAEpC,CAAC;GACW,YAAY,CA8BxB;AA9BwB;;;;;;;;;;;;;;;;ACPzB,iEAAe,8CAA8C,uHAAuH,E;;;;;;;;;;;;;;;ACApL,iEAAe,qHAAqH,yCAAyC,OAAO,IAAI,MAAM,8TAA8T,E","file":"src_app_pages_infinite_infinite_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InfinitePage } from './infinite.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InfinitePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InfinitePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InfinitePageRoutingModule } from './infinite-routing.module';\n\nimport { InfinitePage } from './infinite.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InfinitePageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [InfinitePage]\n})\nexport class InfinitePageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {IonInfiniteScroll} from '@ionic/angular'\n@Component({\n  selector: 'app-infinite',\n  templateUrl: './infinite.page.html',\n  styleUrls: ['./infinite.page.scss'],\n})\nexport class InfinitePage implements OnInit {\n\n  data : any[] = Array(20);\n  @ViewChild(IonInfiniteScroll) infinitScroll : IonInfiniteScroll;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  loadData(event : any) {\n    console.log(event)\n    setTimeout(() => {\n      console.log('Done');\n      if(this.data.length > 60) {\n        this.infinitScroll.complete();\n        this.infinitScroll.disabled = true;\n      } \n\n      const nuevoArr = Array(20);\n      this.data.push(...nuevoArr);\n      this.infinitScroll.complete();\n\n      // App logic to determine if all data is loaded\n      // and disable the infinite scroll\n      // if (data.length == 1000) {\n      //   event.target.disabled = true;\n      // }\n    }, 500);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmZpbml0ZS5wYWdlLnNjc3MifQ== */\";","export default \"<app-header titulo=\\\"infinite\\\"></app-header>\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let item of data; let i=index\\\">\\n      <ion-label>Item {{i + 1}}: {{item}}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n  <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"Cargando mas datos\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}